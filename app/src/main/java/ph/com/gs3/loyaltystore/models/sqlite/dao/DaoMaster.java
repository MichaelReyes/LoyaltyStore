package ph.com.gs3.loyaltystore.models.sqlite.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import ph.com.gs3.loyaltystore.models.sqlite.dao.ProductDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.ProductBreakdownDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.RewardDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.SalesDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.CustomerDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.SalesHasRewardDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.SalesProductDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.StoreDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.ItemReturnDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.CashReturnDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.ExpensesDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.ProductDeliveryDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.ItemInventoryDao;
import ph.com.gs3.loyaltystore.models.sqlite.dao.ItemStockCountDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 1): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 1;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        ProductDao.createTable(db, ifNotExists);
        ProductBreakdownDao.createTable(db, ifNotExists);
        RewardDao.createTable(db, ifNotExists);
        SalesDao.createTable(db, ifNotExists);
        CustomerDao.createTable(db, ifNotExists);
        SalesHasRewardDao.createTable(db, ifNotExists);
        SalesProductDao.createTable(db, ifNotExists);
        StoreDao.createTable(db, ifNotExists);
        ItemReturnDao.createTable(db, ifNotExists);
        CashReturnDao.createTable(db, ifNotExists);
        ExpensesDao.createTable(db, ifNotExists);
        ProductDeliveryDao.createTable(db, ifNotExists);
        ItemInventoryDao.createTable(db, ifNotExists);
        ItemStockCountDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        ProductDao.dropTable(db, ifExists);
        ProductBreakdownDao.dropTable(db, ifExists);
        RewardDao.dropTable(db, ifExists);
        SalesDao.dropTable(db, ifExists);
        CustomerDao.dropTable(db, ifExists);
        SalesHasRewardDao.dropTable(db, ifExists);
        SalesProductDao.dropTable(db, ifExists);
        StoreDao.dropTable(db, ifExists);
        ItemReturnDao.dropTable(db, ifExists);
        CashReturnDao.dropTable(db, ifExists);
        ExpensesDao.dropTable(db, ifExists);
        ProductDeliveryDao.dropTable(db, ifExists);
        ItemInventoryDao.dropTable(db, ifExists);
        ItemStockCountDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(ProductDao.class);
        registerDaoClass(ProductBreakdownDao.class);
        registerDaoClass(RewardDao.class);
        registerDaoClass(SalesDao.class);
        registerDaoClass(CustomerDao.class);
        registerDaoClass(SalesHasRewardDao.class);
        registerDaoClass(SalesProductDao.class);
        registerDaoClass(StoreDao.class);
        registerDaoClass(ItemReturnDao.class);
        registerDaoClass(CashReturnDao.class);
        registerDaoClass(ExpensesDao.class);
        registerDaoClass(ProductDeliveryDao.class);
        registerDaoClass(ItemInventoryDao.class);
        registerDaoClass(ItemStockCountDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
